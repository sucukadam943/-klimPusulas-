import streamlit as st
from datetime import datetime
from utils import local_css, info_card, stat_card
from database import run_query, create_tables

local_css("styles.css")

st.title("Ä°klim TaahhÃ¼tleri")

st.markdown("""
    Ä°klim deÄŸiÅŸikliÄŸiyle mÃ¼cadelede bireysel taahhÃ¼tlerinizi belirleyin ve ilerlemenizi takip edin.
    Her kÃ¼Ã§Ã¼k adÄ±m, bÃ¼yÃ¼k deÄŸiÅŸimlere yol aÃ§abilir!
""")

# VeritabanÄ± tablosunu oluÅŸtur
run_query("""
CREATE TABLE IF NOT EXISTS iklim_taahhutleri (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    kullanici TEXT NOT NULL,
    taahhut TEXT NOT NULL,
    kategori TEXT NOT NULL,
    baslangic_tarihi DATE DEFAULT CURRENT_DATE,
    tamamlandi INTEGER DEFAULT 0
)
""")

# KullanÄ±cÄ± bilgileri
kullanici_adi = st.text_input("Ä°sminiz")

# TaahhÃ¼t kategorileri
kategoriler = {
    "Enerji": [
        "Enerji tasarruflu ampuller kullanacaÄŸÄ±m",
        "KullanÄ±lmayan cihazlarÄ± fiÅŸten Ã§ekeceÄŸim",
        "Evde yenilenebilir enerji sistemleri kuracaÄŸÄ±m",
        "KlimayÄ± daha az kullanacaÄŸÄ±m"
    ],
    "UlaÅŸÄ±m": [
        "Toplu taÅŸÄ±ma kullanacaÄŸÄ±m",
        "Bisiklet kullanacaÄŸÄ±m",
        "AraÃ§ paylaÅŸÄ±mÄ± yapacaÄŸÄ±m",
        "Elektrikli araca geÃ§eceÄŸim"
    ],
    "AtÄ±k YÃ¶netimi": [
        "Geri dÃ¶nÃ¼ÅŸÃ¼m yapacaÄŸÄ±m",
        "Tek kullanÄ±mlÄ±k plastikleri azaltacaÄŸÄ±m",
        "Kompost yapacaÄŸÄ±m",
        "AtÄ±k miktarÄ±mÄ± azaltacaÄŸÄ±m"
    ],
    "Su KullanÄ±mÄ±": [
        "DuÅŸ sÃ¼resini kÄ±saltacaÄŸÄ±m",
        "YaÄŸmur suyu toplayacaÄŸÄ±m",
        "Su tasarruflu cihazlar kullanacaÄŸÄ±m",
        "BahÃ§e sulamayÄ± optimize edeceÄŸim"
    ],
    "TÃ¼ketim": [
        "Yerel Ã¼rÃ¼nler satÄ±n alacaÄŸÄ±m",
        "Ä°kinci el Ã¼rÃ¼nleri tercih edeceÄŸim",
        "SÃ¼rdÃ¼rÃ¼lebilir markalarÄ± destekleyeceÄŸim",
        "GÄ±da israfÄ±nÄ± azaltacaÄŸÄ±m"
    ]
}

# Yeni taahhÃ¼t oluÅŸturma
with st.expander("Yeni TaahhÃ¼t Ekle"):
    with st.form("yeni_taahhut_formu"):
        kategori = st.selectbox("Kategori", list(kategoriler.keys()))
        taahhut = st.selectbox("TaahhÃ¼dÃ¼nÃ¼z", kategoriler[kategori])
        ekle = st.form_submit_button("TaahhÃ¼t Ekle")
        
        if ekle and kullanici_adi and taahhut:
            result = run_query(
                "INSERT INTO iklim_taahhutleri (kullanici, taahhut, kategori) VALUES (?, ?, ?)",
                (kullanici_adi, taahhut, kategori)
            )
            if result is True:
                st.success("TaahhÃ¼dÃ¼nÃ¼z baÅŸarÄ±yla eklendi!")
            else:
                st.error("Bir hata oluÅŸtu. LÃ¼tfen tekrar deneyin.")
        elif ekle:
            st.warning("LÃ¼tfen isminizi girin.")

# Mevcut taahhÃ¼tleri gÃ¶rÃ¼ntÃ¼le
if kullanici_adi:
    st.subheader("TaahhÃ¼tleriniz")
    
    taahhutler = run_query(
        "SELECT * FROM iklim_taahhutleri WHERE kullanici = ? ORDER BY baslangic_tarihi DESC",
        (kullanici_adi,)
    )
    
    if taahhutler and isinstance(taahhutler, list):
        for t in taahhutler:
            with st.container():
                col1, col2 = st.columns([3, 1])
                with col1:
                    st.markdown(f"**{t['taahhut']}** ({t['kategori']})")
                    st.caption(f"BaÅŸlangÄ±Ã§: {t['baslangic_tarihi']}")
                with col2:
                    if not t['tamamlandi']:
                        if st.button("âœ“ TamamlandÄ±", key=f"btn_{t['id']}"):
                            run_query(
                                "UPDATE iklim_taahhutleri SET tamamlandi = 1 WHERE id = ?",
                                (t['id'],)
                            )
                            st.rerun()  # Changed from st.experimental_rerun()
                    else:
                        st.success("TamamlandÄ±! ğŸŒŸ")
                st.markdown("---")
    else:
        info_card(
            "HenÃ¼z TaahhÃ¼t Yok",
            "YukarÄ±daki 'Yeni TaahhÃ¼t Ekle' butonunu kullanarak bir taahhÃ¼tte bulunabilirsiniz."
        )

# Ä°statistikler
st.subheader("Topluluk Ä°statistikleri")

# Kategori bazÄ±nda taahhÃ¼t sayÄ±larÄ±
kategori_istatistikleri = run_query("""
    SELECT kategori, 
           COUNT(*) as toplam_taahhut,
           SUM(tamamlandi) as tamamlanan_taahhut
    FROM iklim_taahhutleri 
    GROUP BY kategori
""")

if kategori_istatistikleri and isinstance(kategori_istatistikleri, list):
    col1, col2, col3 = st.columns(3)
    
    with col1:
        toplam_taahhut = sum(k['toplam_taahhut'] for k in kategori_istatistikleri)
        stat_card(str(toplam_taahhut), "Toplam TaahhÃ¼t")
    
    with col2:
        tamamlanan = sum(k['tamamlanan_taahhut'] for k in kategori_istatistikleri)
        stat_card(str(tamamlanan), "Tamamlanan TaahhÃ¼t")
    
    with col3:
        aktif = toplam_taahhut - tamamlanan
        stat_card(str(aktif), "Aktif TaahhÃ¼t")

# Motivasyon mesajlarÄ±
st.markdown("### ğŸ’š Bilgi ve Motivasyon")

info_card(
    "KÃ¼Ã§Ã¼k AdÄ±mlar, BÃ¼yÃ¼k DeÄŸiÅŸimler",
    "Her taahhÃ¼t, sÃ¼rdÃ¼rÃ¼lebilir bir gelecek iÃ§in atÄ±lmÄ±ÅŸ bir adÄ±mdÄ±r. "
    "Bireysel eylemlerimiz, toplumsal deÄŸiÅŸimin temelini oluÅŸturur."
)

# Ã–neriler
st.sidebar.markdown("### Ä°puÃ§larÄ±")
st.sidebar.markdown("""
- GerÃ§ekÃ§i hedefler belirleyin
- Ä°lerlemenizi dÃ¼zenli olarak takip edin
- BaÅŸarÄ±larÄ±nÄ±zÄ± kutlayÄ±n
- Zorluklarla karÅŸÄ±laÅŸtÄ±ÄŸÄ±nÄ±zda pes etmeyin
- Deneyimlerinizi toplulukla paylaÅŸÄ±n
""")